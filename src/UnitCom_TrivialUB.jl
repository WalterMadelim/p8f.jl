import LinearAlgebra
import Distributions
# import PowerModels # to parse Matpower *.m data files
import Random
import Gurobi
import JuMP
using Logging

# Title: trivial upper bound calculation via RO, in which the adversarial method of iteratively adding hazardous scenarios is adopted 
# Test result: This .jl code is successful, in that it can iteratively improve the lb of the RO via adding (Y, Z)'s
# A note: there is circumstance Gurobi return LOCALLY_SOLVED, due to unknown reasons. But this doesn't occur within this .jl program 
# YZcrew is an initial starting set of hazardous scenarios, it is enriched along the iterates.
# Author: Walter Madelim
# Date: 4/10/24

Random.seed!(23)
global_logger(ConsoleLogger(Info))
GRB_ENV = Gurobi.Env()
function ip(x, y) return LinearAlgebra.dot(x, y) end
function JumpModel(i)
    if i == 0 # the most frequently used
        m = JuMP.Model(() -> Gurobi.Optimizer(GRB_ENV))
    elseif i == 1 # generic convex conic program
        m = JuMP.Model(MosekTools.Optimizer)
    elseif i == 2 # if you need Gurobi callback
        m = JuMP.direct_model(Gurobi.Optimizer(GRB_ENV))
    end
    JuMP.set_silent(m) # use JuMP.unset_silent(m) to debug when it is needed
    return m
end
function load_data()
    # network_data = PowerModels.parse_file("data/case6ww.m")
    # basic_net_data = PowerModels.make_basic_network(network_data)
    # F = PowerModels.calc_basic_ptdf_matrix(basic_net_data)
    S_BASE = 100 # MVA
    F = [0.0 -0.44078818231301325 -0.3777905547603966 -0.2799660317280192 -0.29542103345397086 -0.3797533556433226; 0.0 -0.32937180203296385 -0.3066763814017814 -0.5368505424397501 -0.27700207451336545 -0.30738349678665927; 0.0 -0.229840015654023 -0.3155330638378219 -0.18318342583223077 -0.42757689203266364 -0.31286314757001815; 0.0 0.06057464187751593 -0.354492865935812 0.018549141862024054 -0.10590781852459258 -0.20249230420747694; 0.0 0.3216443011699881 0.23423126113776493 -0.3527138586915366 0.11993854023522055 0.23695476674932447; 0.0 0.10902536164428178 -0.020830957469362865 0.03338570129374399 -0.19061834882900958 -0.016785057525005476; 0.0 0.0679675129952012 -0.23669799249298656 0.02081298380774932 -0.11883340633558914 -0.39743076066016436; 0.0 0.06529291323070335 0.270224001096538 0.019993968970548615 -0.11415717519819152 0.1491923753527435; 0.0 -0.004718271353187364 0.3752831329676507 -0.001444827108524449 0.00824935667359894 -0.35168467956022; 0.0 -0.007727500862975828 -0.07244512026401648 0.11043559886871346 -0.15706353427814482 -0.0704287300373348; 0.0 -0.06324924164201379 -0.13858514047466358 -0.019368156699224842 0.11058404966199031 -0.2508845597796152]
    Bℶ = Dict(
        "f" =>  Int[1,1,1,2,2,2,2,3,3,4,5],
        "t" =>  Int[2,4,5,3,4,5,6,5,6,5,6],
        "BC" => [4,6,4,4,6,3,9,7,8,2,4]/10
    ) # lines
    Wℶ = Dict(
        "id" => Int[1, 2],
        "n" => Int[2, 3],
        "CW" => [500., 400],
        "MAX" => [1.8, 1.7]
    ) # wind
    Lℶ = Dict(
        "id" => Int[1,2,3],
        "n" => Int[4,5,6],
        "CL" => 1.8 * [3000., 2583, 2708],
        "MAX" => [1, 1.2, 1]
    ) # load
    Gℶ = Dict(
        "id" => Int[1, 2, 3], # the 1st one is slack generator
        "n" => Int[1, 2, 3], # the 1st generator resides at bus 1
        "ZS" => [1., 0, 0], # the 1st generator is always on
        "ZP" => [0.5, 0, 0], # Pzero, consistent with IS
        "C2" => [53.3, 88.9, 74.1],
        "C1" => [1166.9, 1033.3, 1083.3],
        "C0" => [0., 200, 240], # the 1st generator has no generation cost if output power = 0
        "CR" => [83., 74, 77],
        "CST" => [210., 200, 240],
        "CSH" => [210., 200, 240],
        "PI" => [0., 0.375, 0.45], # the 1st generator doesn't have a positive output lower bound
        "PS" => [2, 1.5, 1.8],
        "RU" => [.6, .6, .6],
        "SU" => [.6, .6, .6],
        "RD" => [.6, .6, .6],
        "SD" => [.6, .6, .6],
        "UT" => Int[3, 3, 3],
        "DT" => Int[3, 3, 3]
    )
    G = length(Gℶ["n"])
    W = length(Wℶ["n"])
    L = length(Lℶ["n"])
    B, N = size(F)
    SRD = 1.5 # system reserve demand
    return B, G, W, L, F, SRD, Bℶ, Gℶ, Wℶ, Lℶ
end
function θ(g, p) return Gℶ["C2"][g] * p^2 + Gℶ["C1"][g] * p + Gℶ["C0"][g] end
B, G, W, L, F, SRD, Bℶ, Gℶ, Wℶ, Lℶ = load_data()
MY = [0.654662 0.641636; 0.656534 0.819678; 0.511227 0.392445; 0.435808 0.123746; 0.100096 0.35382; 0.782138 0.542857; 0.798238 0.76052; 0.39923 0.309604]
MZ = [[0.7310,0.4814,0.6908,0.4326,0.1753,0.8567,0.8665,0.6107] [0.7010,0.5814,0.3908,0.1326,0.4153,0.7567,0.8565,0.5107] [0.2010,0.6814,0.1908,0.4326,0.8153,0.7567,0.6565,0.7107]]
T = 8

function master_plus_RCYZ(MY, MZ)
    υ = JumpModel(0) # The master problem = 1st stage + RO
    JuMP.@variable(υ, u[1:T, 2:G], Bin)
    JuMP.@variable(υ, v[1:T, 2:G], Bin)
    JuMP.@variable(υ, x[0:T, 2:G], Bin)
    JuMP.@expression(υ, CGst[t = 1:T, g = 2:G], Gℶ["CST"][g] * u[t, g])
    JuMP.@expression(υ, CGsh[t = 1:T, g = 2:G], Gℶ["CSH"][g] * v[t, g])
    JuMP.@expression(υ, COST1, sum(CGst) + sum(CGsh))
    JuMP.@constraint(υ, [t = 1:T, g = 2:G], x[t, g] - x[t-1, g] == u[t, g] - v[t, g]) # linking constr, but authentic 1st stage
    [   JuMP.fix(x[0, g], Gℶ["ZS"][g]; force = true) for g in 2:G   ]
    JuMP.@constraint(υ, [g = 2:G, t = 1:T-Gℶ["UT"][g]+1], sum(x[i, g] for i in t:t+Gℶ["UT"][g]-1) >= Gℶ["UT"][g] * u[t, g])
    JuMP.@constraint(υ, [g = 2:G, t = T-Gℶ["UT"][g]+1:T], sum(x[i, g] - u[t, g] for i in t:T) >= 0.)
    JuMP.@constraint(υ, [g = 2:G, t = 1:T-Gℶ["DT"][g]+1], sum(1. - x[i, g] for i in t:t+Gℶ["DT"][g]-1) >= Gℶ["DT"][g] * v[t, g])
    JuMP.@constraint(υ, [g = 2:G, t = T-Gℶ["DT"][g]+1:T], sum(1. - x[i, g] - v[t, g] for i in t:T) >= 0.)
    # D1 = cutDict1
    # for (pu, pv, px, cn, ut, vt, xt) in zip(D1["pu"], D1["pv"], D1["px"], D1["cn"], D1["u"], D1["v"], D1["x"])
    #     JuMP.@constraint(υ, 0. >= cn + ip(pu, u .- ut) + ip(pv, v .- vt) + ip(px, x .- xt)) # Feas. cut
    # end
    # RCY's part
    JuMP.@variable(υ, α)
    JuMP.@variable(υ, βY[1:T, 1:W])
    JuMP.@variable(υ, βZ[1:T, 1:L])
    JuMP.@variable(υ, objterm)
    JuMP.@constraint(υ, objterm >= COST1 + α + ip(MY, βY) + ip(MZ, βZ)) # 📕 joint optimization
    JuMP.@objective(υ, Min, objterm) 
    K = length(YZcrew)
    if true # second-stage variables
        JuMP.@variable(υ, ϖ[1:K, 1:T, 1:W] >= 0.)
        JuMP.@variable(υ, ζ[1:K, 1:T, 1:L] >= 0.)
        JuMP.@variable(υ, ρ[1:K, 1:T, 1:G] >= 0.)
        JuMP.@variable(υ, ϱ[1:K, 1:T] >= 0.)
        JuMP.@variable(υ, ϱsq[1:K, 1:T])
        JuMP.@variable(υ, p[1:K, 0:T, 2:G])
        JuMP.@variable(υ, psq[1:K, 1:T, 2:G])
        JuMP.@variable(υ, ϕ[1:K, 1:T, 2:G] >= 0.)
    end
    for (k, (Y, Z)) in enumerate(YZcrew)
        JuMP.@constraint(υ, [t = 1:T, w in 1:W], ϖ[k, t, w] - Wℶ["MAX"][w] * Y[t, w] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, l in 1:L], ζ[k, t, l] - Lℶ["MAX"][l] * Z[t, l] <= 0.)
        JuMP.@constraint(υ, [t = 1:T], [ϱsq[k, t] + 1, ϱsq[k, t] - 1, 2 * ϱ[k, t]] in JuMP.SecondOrderCone()) # 🍧
        [ JuMP.fix(p[k, 0, g], Gℶ["ZP"][g]; force = true) for k in 1:K, g in 2:G ]
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], [psq[k, t, g] + 1, psq[k, t, g] - 1, 2 * p[k, t, g]] in JuMP.SecondOrderCone()) # 🍧
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], Gℶ["C2"][g] * psq[k, t, g] + Gℶ["C1"][g] * p[k, t, g] + Gℶ["C0"][g] - (1. - x[t, g]) * θ(g, Gℶ["PS"][g]) - ϕ[k, t, g] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], -Gℶ["RD"][g] * x[t, g] - Gℶ["SD"][g] * v[t, g] + p[k, t-1, g] - p[k, t, g] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], p[k, t, g] - p[k, t-1, g] - Gℶ["RU"][g] * x[t-1, g] - Gℶ["SU"][g] * u[t, g] <= 0.)
        JuMP.@constraint(υ, [t = 1:T], SRD - sum(ρ[k, t, :]) <= 0.)
        JuMP.@constraint(υ, [t = 1:T], ϱ[k, t] + ρ[k, t, 1] - Gℶ["PS"][1] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], Gℶ["PI"][g] * x[t, g] - p[k, t, g] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], p[k, t, g] + ρ[k, t, g] - Gℶ["PS"][g] * x[t, g] <= 0.)
        JuMP.@constraint(υ, [t = 1:T, b = 1:B], -Bℶ["BC"][b] <= sum(F[b, Wℶ["n"][w]] * (Wℶ["MAX"][w] * Y[t, w] - ϖ[k, t, w]) for w in 1:W) + 
            sum(F[b, Gℶ["n"][g]] * p[k, t, g] for g in 2:G)
            - sum(F[b, Lℶ["n"][l]] * (Lℶ["MAX"][l] * Z[t, l] - ζ[k, t, l]) for l in 1:L) <= Bℶ["BC"][b])
        JuMP.@constraint(υ, [t = 1:T], sum(Wℶ["MAX"][w] * Y[t, w] - ϖ[k, t, w] for w in 1:W) + sum(p[k, t, :]) + ϱ[k, t] == sum(Lℶ["MAX"][l] * Z[t, l] - ζ[k, t, l] for l in 1:L))
        JuMP.@constraint(υ, α + ip(Y, βY) + ip(Z, βZ) >=
            sum(Wℶ["CW"][w] * ϖ[k, t, w] for t in 1:T, w in 1:W) 
            + sum(Lℶ["CL"][l] * ζ[k, t, l] for t in 1:T, l in 1:L) 
            + sum(Gℶ["CR"][g] * ρ[k, t, g] for t in 1:T, g in 1:G) 
            + sum(Gℶ["C2"][1] * ϱsq[k, t] + Gℶ["C1"][1] * ϱ[k, t] for t in 1:T) 
            + sum(ϕ[k, :, :])
        ) # 📚 pertaining to obj[k]
    end
    JuMP.set_attribute(υ, "DualReductions", 0)
    JuMP.optimize!(υ)
    status = JuMP.termination_status(υ)
    if status == JuMP.DUAL_INFEASIBLE
        JuMP.set_lower_bound(objterm, -333.333)
        JuMP.optimize!(υ)
        status = JuMP.termination_status(υ)
    end
    if status != JuMP.OPTIMAL
        error("in master_plus_RCYZ, status = $status")
    end
    return JuMP.value(objterm), JuMP.value(α), JuMP.value.(βY), JuMP.value.(βZ), JuMP.value.(u), JuMP.value.(v), JuMP.value.(x)
end

function subproblem_RCYZ(α, βY, βZ, u, v, x)
    function my_callback_function(cb_data, cb_where::Cint)
        if cb_where == Gurobi.GRB_CB_MIPSOL
            Gurobi.load_callback_variable_primal(cb_data, cb_where)
            vio_val = JuMP.callback_value.(cb_data, VIO_VAL)
            if vio_val > .5
                Gurobi.GRBterminate(JuMP.backend(υ)) 
                return nothing
            end
        end
        return nothing
    end
    υ = JumpModel(2)
    JuMP.@variable(υ, 0. <= Y[1:T, 1:W] <= 1.)
    JuMP.@variable(υ, 0. <= Z[1:T, 1:L] <= 1.)
    if true # dual system of f(⋅)
        JuMP.@variable(υ, ℵϖ[1:T, 1:W] >= 0.)
        JuMP.@variable(υ, ℵζ[1:T, 1:L] >= 0.)
        JuMP.@variable(υ, ℵϕ[1:T, 2:G] >= 0.)
        JuMP.@variable(υ, ℵdpl[1:T, 2:G] >= 0.)
        JuMP.@variable(υ, ℵdpr[1:T, 2:G] >= 0.)
        JuMP.@variable(υ, ℵSRD[1:T] >= 0.)
        JuMP.@variable(υ, ℵϱ[1:T] >= 0.)
        JuMP.@variable(υ, ℵPI[1:T, 2:G] >= 0.)
        JuMP.@variable(υ, ℵPS[1:T, 2:G] >= 0.)
        JuMP.@variable(υ, ℵbalance[1:T])
        JuMP.@variable(υ, ℵlfl[1:T, 1:B] >= 0.)
        JuMP.@variable(υ, ℵlfr[1:T, 1:B] >= 0.)
        JuMP.@variable(υ, ℵQ11[1:T])
        JuMP.@variable(υ, ℵQ12[1:T])
        JuMP.@variable(υ, ℵQ13[1:T])
        JuMP.@variable(υ, ℵQ21[1:T, 2:G])
        JuMP.@variable(υ, ℵQ22[1:T, 2:G])
        JuMP.@variable(υ, ℵQ23[1:T, 2:G])
        JuMP.@expression(υ, supobj, -sum(Bℶ["BC"][b] * (ℵlfl[t, b] + ℵlfr[t, b]) for b in 1:B, t in 1:T) 
            +sum(
                (ℵlfl[t, b] - ℵlfr[t, b]) * (sum(F[b, Lℶ["n"][l]] * Lℶ["MAX"][l] * Z[t, l] for l in 1:L) - sum(F[b, Wℶ["n"][w]] * Wℶ["MAX"][w] * Y[t, w] for w in 1:W))
                    for b in 1:B, t in 1:T
                )
            -sum(ℵϖ[t, w] * (Wℶ["MAX"][w] * Y[t, w]) for w in 1:W, t in 1:T)
            -sum(ℵζ[t, l] * (Lℶ["MAX"][l] * Z[t, l]) for l in 1:L, t in 1:T)
            +sum(ℵQ12[t] - ℵQ11[t] for t in 1:T)
            +sum(ℵQ22[t, g] - ℵQ21[t, g] for g in 2:G, t in 1:T)
            +sum(ℵϕ[t, g] * (Gℶ["C0"][g] - (1 - x[t, g]) * θ(g, Gℶ["PS"][g])) for g in 2:G, t in 1:T)
            +SRD * sum(ℵSRD)
            -Gℶ["PS"][1] * sum(ℵϱ)
            +sum(Gℶ["ZP"][g] * (ℵdpl[1, g] - ℵdpr[1, g]) for g in 2:G)
            +sum(ℵdpl[t, g] * (-Gℶ["RD"][g] * x[t, g] - Gℶ["SD"][g] * v[t, g]) for g in 2:G, t in 1:T)
            +sum(ℵdpr[t, g] * (-Gℶ["RU"][g] * x[t-1, g] - Gℶ["SU"][g] * u[t, g]) for g in 2:G, t in 1:T)
            +sum(Gℶ["PI"][g] * x[t, g] * ℵPI[t, g] for g in 2:G, t in 1:T)
            +sum(ℵbalance[t] * (sum(Wℶ["MAX"][w] * Y[t, w] for w in 1:W) - sum(Lℶ["MAX"][l] * Z[t, l] for l in 1:L)) for t in 1:T)
            -sum(Gℶ["PS"][g] * x[t, g] * ℵPS[t, g] for g in 2:G, t in 1:T)
        )
        JuMP.@expression(υ, expr1[t = 1:T, g = 2:G], sum(F[b, Gℶ["n"][g]] * (ℵlfr[t, b] - ℵlfl[t, b]) for b in 1:B) 
            + Gℶ["C1"][g] * ℵϕ[t, g] - 2 * ℵQ23[t, g] + (ℵdpr[t, g] - ℵdpl[t, g]) + (ℵPS[t, g] - ℵPI[t, g]) + ℵbalance[t])
        JuMP.@constraint(υ, p_T[g = 2:G], expr1[T, g] == 0.)
        JuMP.@constraint(υ, p[t = 1:T-1, g = 2:G], expr1[t, g] + (ℵdpl[t+1, g] - ℵdpr[t+1, g]) == 0.)
        JuMP.@constraint(υ, psq[t = 1:T, g = 2:G], -ℵQ21[t, g] - ℵQ22[t, g] + Gℶ["C2"][g] * ℵϕ[t, g] == 0.)
        JuMP.@constraint(υ, ϕ[t = 1:T, g = 2:G], 1. - ℵϕ[t, g] >= 0.)
        JuMP.@constraint(υ, ρ_1[t = 1:T], Gℶ["CR"][1] - ℵSRD[t] + ℵϱ[t] >= 0.)
        JuMP.@constraint(υ, ρ[t = 1:T, g = 2:G], Gℶ["CR"][g] - ℵSRD[t] + ℵPS[t, g] >= 0.)
        JuMP.@constraint(υ, ϱ[t = 1:T], Gℶ["C1"][1] - 2 * ℵQ13[t] + ℵϱ[t] + ℵbalance[t] >= 0.)
        JuMP.@constraint(υ, ϱsq[t = 1:T], Gℶ["C2"][1] - ℵQ11[t] - ℵQ12[t] == 0.)
        JuMP.@constraint(υ, ϖ[t = 1:T, w = 1:W], ℵϖ[t, w] + Wℶ["CW"][w] - ℵbalance[t] + sum(F[b, Wℶ["n"][w]] * (ℵlfl[t, b] - ℵlfr[t, b]) for b in 1:B) >= 0.)
        JuMP.@constraint(υ, ζ[t = 1:T, l = 1:L], ℵζ[t, l] + Lℶ["CL"][l] + ℵbalance[t] + sum(F[b, Lℶ["n"][l]] * (ℵlfr[t, b] - ℵlfl[t, b]) for b in 1:B) >= 0.)
        JuMP.@constraint(υ, [t = 1:T], [ℵQ11[t], ℵQ12[t], ℵQ13[t]] in JuMP.SecondOrderCone()) # 🍧
        JuMP.@constraint(υ, [t = 1:T, g = 2:G], [ℵQ21[t, g], ℵQ22[t, g], ℵQ23[t, g]] in JuMP.SecondOrderCone()) # 🍧
    end
    JuMP.@expression(υ, VIO_VAL, supobj - ip(Y, βY) - ip(Z, βZ) - α)
    JuMP.@objective(υ, Max, VIO_VAL)
    JuMP.MOI.set(υ, Gurobi.CallbackFunction(), my_callback_function)
    # JuMP.unset_silent(υ)
    JuMP.optimize!(υ) # with callback
    status = JuMP.termination_status(υ)
    if status ∉ [JuMP.OPTIMAL, JuMP.INTERRUPTED]
        error("in master_plus_RCYZ, status = $status")
    end
    JuMP.value(VIO_VAL), JuMP.value.(Y), JuMP.value.(Z)
end

YZcrew = [(ones(T, W), ones(T, L)), (zeros(T, W), zeros(T, L))] # belongs to master_plus_RCYZ()
function get_YZcrew()
    YZcrew = [([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 0.0 0.0; 0.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 0.0; 0.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 0.0 1.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 1.0; 0.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 1.0 0.0; 0.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 1.0; 0.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0], [0.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0], [0.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 0.0]), ([0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 1.0 0.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [0.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 0.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 1.0 0.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 1.0; 0.0 1.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [1.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0]), ([1.0 1.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 0.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 0.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 0.0], [0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 0.0 1.0; 1.0 0.0 0.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 0.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 0.0], [1.0 1.0 1.0; 0.0 0.0 1.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([1.0 1.0; 1.0 1.0; 1.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 1.0 0.0; 0.0 0.0; 1.0 0.0; 0.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 0.0; 0.0 0.0 0.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 1.0 1.0; 1.0 0.0; 0.0 1.0; 1.0 0.0], [1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 0.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 1.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 0.0; 0.0 1.0 1.0; 1.0 0.0 0.0; 1.0 0.0 1.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0]), ([0.0 0.0; 1.0 1.0; 0.0 0.0; 0.0 0.0; 0.0 0.0; 1.0 0.0; 1.0 1.0; 1.0 1.0], [1.0 1.0 1.0; 0.0 1.0 1.0; 1.0 1.0 1.0; 0.0 0.0 0.0; 1.0 1.0 1.0; 1.0 1.0 1.0; 1.0 1.0 0.0; 1.0 1.0 1.0])]
end
YZcrew = get_YZcrew()

for i in 1:typemax(Int)
    obj, α, βY, βZ, u, v, x = master_plus_RCYZ(MY, MZ)
    VIO_VAL, Y, Z = subproblem_RCYZ(α, βY, βZ, u, v, x)
    @info "ite = ($i), VIO_VAL = $(VIO_VAL), obj = $obj"
    if i % 10 == 0
        show(Y)
    end
    if VIO_VAL > .5
        push!(YZcrew, (Y, Z))
    else
        return VIO_VAL, obj
    end
end

# # test result WITH an initially specified hazardous scenario set (i.e. not from scratch)
# [ Info: ite = (42), VIO_VAL = 878.5718218517868, obj = 42391.13214944753
# [ Info: ite = (43), VIO_VAL = 875.393370734258, obj = 42399.15977438736
# [ Info: ite = (44), VIO_VAL = 305.32986169988817, obj = 42402.56145228574
# ... (optimizing continually ...)
# Therefore, the precise value of the objective via trivial upper bound should be >= 42402
